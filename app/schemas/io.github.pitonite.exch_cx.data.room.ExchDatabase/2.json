{
  "formatVersion": 1,
  "database": {
    "version": 2,
    "identityHash": "e7261008d75c4d6f4d8ab4e774453bab",
    "entities": [
      {
        "tableName": "Order",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `fromAddr` TEXT NOT NULL DEFAULT '_GENERATING_', `fromCurrency` TEXT NOT NULL, `fromAmountReceived` TEXT DEFAULT null, `maxInput` TEXT NOT NULL, `minInput` TEXT NOT NULL, `networkFee` TEXT DEFAULT null, `rate` TEXT NOT NULL, `rateMode` TEXT NOT NULL, `state` TEXT NOT NULL, `stateError` TEXT DEFAULT null, `svcFee` TEXT NOT NULL, `toAmount` TEXT DEFAULT null, `toAddress` TEXT NOT NULL, `toCurrency` TEXT NOT NULL, `transactionIdReceived` TEXT DEFAULT null, `transactionIdSent` TEXT DEFAULT null, `refundAvailable` INTEGER NOT NULL DEFAULT 0, `refundPrivateKey` TEXT DEFAULT null, `walletPool` TEXT DEFAULT null, `refundTransactionId` TEXT DEFAULT null, `refundAddress` TEXT DEFAULT null, `refundFeeAmount` TEXT DEFAULT null, `modifiedAt` INTEGER NOT NULL DEFAULT (cast((julianday('now') - 2440587.5) * 86400 * 1000 as integer)), `archived` INTEGER NOT NULL DEFAULT 0, `fromAmount` TEXT DEFAULT null, `referrerId` TEXT DEFAULT null, `aggregationOption` TEXT DEFAULT null, `feeOption` TEXT DEFAULT null, `letterOfGuarantee` TEXT DEFAULT null, `deletedInRemote` INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromAddr",
            "columnName": "fromAddr",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'_GENERATING_'"
          },
          {
            "fieldPath": "fromCurrency",
            "columnName": "fromCurrency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fromAmountReceived",
            "columnName": "fromAmountReceived",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "maxInput",
            "columnName": "maxInput",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "minInput",
            "columnName": "minInput",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "networkFee",
            "columnName": "networkFee",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "rate",
            "columnName": "rate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "rateMode",
            "columnName": "rateMode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "stateError",
            "columnName": "stateError",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "svcFee",
            "columnName": "svcFee",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "toAmount",
            "columnName": "toAmount",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "toAddress",
            "columnName": "toAddress",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "toCurrency",
            "columnName": "toCurrency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "transactionIdReceived",
            "columnName": "transactionIdReceived",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "transactionIdSent",
            "columnName": "transactionIdSent",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "refundAvailable",
            "columnName": "refundAvailable",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "refundPrivateKey",
            "columnName": "refundPrivateKey",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "walletPool",
            "columnName": "walletPool",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "refundTransactionId",
            "columnName": "refundTransactionId",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "refundAddress",
            "columnName": "refundAddress",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "refundFeeAmount",
            "columnName": "refundFeeAmount",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "modifiedAt",
            "columnName": "modifiedAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "(cast((julianday('now') - 2440587.5) * 86400 * 1000 as integer))"
          },
          {
            "fieldPath": "archived",
            "columnName": "archived",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "fromAmount",
            "columnName": "fromAmount",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "referrerId",
            "columnName": "referrerId",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "aggregationOption",
            "columnName": "aggregationOption",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "feeOption",
            "columnName": "feeOption",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "letterOfGuarantee",
            "columnName": "letterOfGuarantee",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "null"
          },
          {
            "fieldPath": "deletedInRemote",
            "columnName": "deletedInRemote",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_Order_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Order_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_Order_archived_createdAt",
            "unique": false,
            "columnNames": [
              "archived",
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Order_archived_createdAt` ON `${TABLE_NAME}` (`archived`, `createdAt`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SupportMessage",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`orderid` TEXT NOT NULL, `index` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT (cast((julianday('now') - 2440587.5) * 86400 * 1000 as integer)), `readBySupport` INTEGER NOT NULL DEFAULT 0, `sender` TEXT NOT NULL, `message` TEXT NOT NULL, PRIMARY KEY(`orderid`, `index`), FOREIGN KEY(`orderid`) REFERENCES `Order`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "orderid",
            "columnName": "orderid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "index",
            "columnName": "index",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "(cast((julianday('now') - 2440587.5) * 86400 * 1000 as integer))"
          },
          {
            "fieldPath": "readBySupport",
            "columnName": "readBySupport",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "sender",
            "columnName": "sender",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "orderid",
            "index"
          ]
        },
        "indices": [
          {
            "name": "index_SupportMessage_orderid_index",
            "unique": false,
            "columnNames": [
              "orderid",
              "index"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SupportMessage_orderid_index` ON `${TABLE_NAME}` (`orderid`, `index`)"
          },
          {
            "name": "index_SupportMessage_orderid",
            "unique": false,
            "columnNames": [
              "orderid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SupportMessage_orderid` ON `${TABLE_NAME}` (`orderid`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Order",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "orderid"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "CurrencyReserve",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`currency` TEXT NOT NULL, `amount` TEXT NOT NULL, `updatedAt` INTEGER NOT NULL, PRIMARY KEY(`currency`))",
        "fields": [
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "currency"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CurrencyReserveTrigger",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `currency` TEXT NOT NULL, `targetAmount` TEXT, `comparison` INTEGER, `isEnabled` INTEGER NOT NULL DEFAULT 1, `onlyOnce` INTEGER NOT NULL DEFAULT 0, `createdAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetAmount",
            "columnName": "targetAmount",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comparison",
            "columnName": "comparison",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isEnabled",
            "columnName": "isEnabled",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "onlyOnce",
            "columnName": "onlyOnce",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_CurrencyReserveTrigger_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CurrencyReserveTrigger_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_CurrencyReserveTrigger_isEnabled",
            "unique": false,
            "columnNames": [
              "isEnabled"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CurrencyReserveTrigger_isEnabled` ON `${TABLE_NAME}` (`isEnabled`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'e7261008d75c4d6f4d8ab4e774453bab')"
    ]
  }
}